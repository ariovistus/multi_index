
random_access_index( [tag] )

    insertAll ( OtherRange ) ?

    Range opSlice ( [a , b] )

    length ( [ newlen ] )
    capacity
    reserve
    front
    back
    empty
    clear

    opDollar ?!

    opIndex
    opIndexAssign ?
    opBinary!"~"  ?

    swapAt( size_t, size_t )  ?

    removeAny  // removes element $-1 ?
    stableRemoveAny

    insertBack
    insert
    stableInsertBack 

    removeBack
    stableRemoveBack

    insertAfter ( Range, stuff )  // not container primitive ?? eqiv to splice
    insertBefore ( Range, stuff )  // not container primitive ?? eqiv to splice

    linearRemove ( Range )
    stableLinearRemove



sequenced_index ( [tag] ):
    insertAll ( OtherRange )   ?

    Range opSlice( )
    Range opSlice ( a .. b ) ? 

    length 
    front ( [ Value ] )
    back ( [ Value ] )
    empty
    clear

    opDollar ?!

    opBinary!"~"  ?

    insertFront ( ValueStuff )
    insertFront ( RangeStuff )
    stableInsert
    stableInsertFront
    insertBack ( ValueStuff )
    insertBack ( RangeStuff )
    insert
    stableInsertBack
    insertAfter ( Range, Stuff )
    stableInsertAfter
    insertBefore ( Range, Stuff )
    stableInsertAfter

    removeAny  // removes element $-1 ?
    stableRemoveAny 
    removeFront 
    stableRemoveFront
    removeBack 
    stableRemoveBack
    linearRemove ( Range )
    stableLinearRemove

hashed_index_[non_]unique( [tag,] KeyFromValue, Hash, Pred ):

    length 
    front ( [ Value ?] )
    moveFront
    empty
    clear
    moveAt ( Key ) ?

    opIndex ( Key )
    opIndexAssign ( Key )  ?

    opIn ( Key )
    opIn ( Value )

    KeyRange keys
    Range opSlice ?

    equalRange ( Key )  

    insert ( Value )
    insert ( SomeRange )
    stableInsert

    removeAny
    stableRemoveAny

    remove 
    removeKey ( Key )

ordered_index_[non_]unique( [tag,] KeyFromValue, Compare ):

    length 
    front ( [ Value ?] )
    moveFront
    empty
    clear
    moveAt ( Key ) ?

    opIndex ( Key )
    opIndexAssign ( Key )  ?

    opIn ( Key )
    opIn ( Value )

    KeyRange keys
    Range opSlice ?

    lowerBounds ( Key )
    upperBounds ( Key )
    bounds ( BoundSpec, Key )
    equalRange ( Key )  

    insert ( Value )
    insert ( SomeRange )
    stableInsert

    removeAny
    stableRemoveAny

    remove 
    removeKey ( Key )

heap(KeyFromValue, Compare):

    length 
    front (  )
    back (  )
    empty
    clear
    opSlice

    insert
    stableInsert

    removeAny
    stableRemoveAny

    removeFront
    stableRemoveFront

    removeBack
    stableRemoveBack

    remove
